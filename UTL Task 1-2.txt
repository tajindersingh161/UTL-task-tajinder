Task 1 - Database Setup

Note - I have my local database server to create a database in MySQL. Below are the queries used to to create database, then create table and then insert data into table.

// Query to Create Database with name interactivebooksearch

CREATE DATABASE interactivebooksearch

// Query to Create table "books"

CREATE TABLE books (
    ISBN VARCHAR(15),
    TITLE VARCHAR(100),
    AUTHOR_FIRST_NAME VARCHAR(50),
    AUTHOR_LAST_NAME VARCHAR(50),
    GENRE VARCHAR(50),
    PUBLISHED_DATE DATE
);

-------------------------------------------------------------------------------------------------------------------------
Task-2 (Data Injection and SQL Queries)

Option 1 -- USing Python Script - Below is the script
------------------------------------------------------------------------------
import pandas as pd
import mysql.connector

# MySQL database connection settings
db_config = {
    "host": "localhost",
    "user": "root",
    "password": "",
    "database": "interactivebooksearch"
}

# CSV file path
csv_file_path = "H:\\books.csv"

# Read CSV data using pandas
csv_data = pd.read_csv(csv_file_path)

# Establish MySQL database connection
connection = mysql.connector.connect(**db_config)
cursor = connection.cursor()

# Iterate through the CSV data and insert into the 'books' table
for index, row in csv_data.iterrows():
    query = "INSERT INTO books (ISBN, TITLE, AUTHOR_FIRST_NAME, AUTHOR_LAST_NAME, GENRE, PUBLISHED_DATE) VALUES (%s, %s, %s, %s, %s, %s)"
    values = (row['ISBN'], row['TITLE'], row['AUTHOR FIRST NAME'], row['AUTHOR LAST NAME'], row['GENRE'], row['PUBLISHED DATE'])
    
    cursor.execute(query, values)
    connection.commit()

# Close the database connection
cursor.close()
connection.close()

print("CSV data imported into 'books' table successfully!")
----------------------------------------------------------------------------------------------------------
Option-2 MySQL Query to insert data into table from local file
NOTE: you have to change the path of the CSV file accoding to your system- like I have kept the file in the "H:\\books.csv"

LOAD DATA INFILE 'H:\\books.csv'
INTO TABLE books
FIELDS TERMINATED BY ','
ENCLOSED BY '"'
LINES TERMINATED BY '\n'
IGNORE 1 ROWS;

--------------------------------------------------------------------------------------------------------------

1.	Find the oldest book for each author.
 
SELECT AUTHOR_FIRST_NAME, AUTHOR_LAST_NAME, MIN(PUBLISHED_DATE) AS oldest_book_date
FROM books
GROUP BY AUTHOR_FIRST_NAME, AUTHOR_LAST_NAME;

-----------------------------------------------------------------------------------------

2.	Find the authors who have written the most books in each genre. (only displayed the distinct rows)

SELECT genre_stats.GENRE, genre_stats.AUTHOR_FIRST_NAME, genre_stats.AUTHOR_LAST_NAME, genre_stats.book_count
FROM (
    SELECT b.GENRE, b.AUTHOR_FIRST_NAME, b.AUTHOR_LAST_NAME, COUNT(distinct ISBN) AS book_count,
           RANK() OVER (PARTITION BY b.GENRE ORDER BY COUNT(*) DESC) AS rank
    FROM books b
    GROUP BY b.GENRE, b.AUTHOR_FIRST_NAME, b.AUTHOR_LAST_NAME
) genre_stats
WHERE genre_stats.rank = 1;

-------------------------------------------------------------------------------------------------------

3.	Calculate the total number of books published each year and display the results by year. (Displayed distinct results)

SELECT YEAR(PUBLISHED_DATE) AS publication_year, COUNT(distinct ISBN) AS book_count
FROM books
GROUP BY YEAR(PUBLISHED_DATE)
ORDER BY publication_year;






